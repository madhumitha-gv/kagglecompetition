{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91720,"databundleVersionId":13345277,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-21T18:48:45.366021Z","iopub.execute_input":"2025-09-21T18:48:45.366908Z","iopub.status.idle":"2025-09-21T18:48:45.728910Z","shell.execute_reply.started":"2025-09-21T18:48:45.366879Z","shell.execute_reply":"2025-09-21T18:48:45.727853Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e9/sample_submission.csv\n/kaggle/input/playground-series-s5e9/train.csv\n/kaggle/input/playground-series-s5e9/test.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"train=pd.read_csv('/kaggle/input/playground-series-s5e9/train.csv')\ntest=pd.read_csv('/kaggle/input/playground-series-s5e9/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-21T18:48:47.714785Z","iopub.execute_input":"2025-09-21T18:48:47.715253Z","iopub.status.idle":"2025-09-21T18:48:49.631567Z","shell.execute_reply.started":"2025-09-21T18:48:47.715226Z","shell.execute_reply":"2025-09-21T18:48:49.629877Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"train.head(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-21T18:48:55.233293Z","iopub.execute_input":"2025-09-21T18:48:55.233647Z","iopub.status.idle":"2025-09-21T18:48:55.264884Z","shell.execute_reply.started":"2025-09-21T18:48:55.233621Z","shell.execute_reply":"2025-09-21T18:48:55.263877Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   id  RhythmScore  AudioLoudness  VocalContent  AcousticQuality  \\\n0   0     0.603610      -7.636942      0.023500         0.000005   \n1   1     0.639451     -16.267598      0.071520         0.444929   \n2   2     0.514538     -15.953575      0.110715         0.173699   \n3   3     0.734463      -1.357000      0.052965         0.001651   \n4   4     0.532968     -13.056437      0.023500         0.068687   \n\n   InstrumentalScore  LivePerformanceLikelihood  MoodScore  TrackDurationMs  \\\n0           0.000001                   0.051385   0.409866      290715.6450   \n1           0.349414                   0.170522   0.651010      164519.5174   \n2           0.453814                   0.029576   0.423865      174495.5667   \n3           0.159717                   0.086366   0.278745      225567.4651   \n4           0.000001                   0.331345   0.477769      213960.6789   \n\n     Energy  BeatsPerMinute  \n0  0.826267       147.53020  \n1  0.145400       136.15963  \n2  0.624667        55.31989  \n3  0.487467       147.91212  \n4  0.947333        89.58511  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>RhythmScore</th>\n      <th>AudioLoudness</th>\n      <th>VocalContent</th>\n      <th>AcousticQuality</th>\n      <th>InstrumentalScore</th>\n      <th>LivePerformanceLikelihood</th>\n      <th>MoodScore</th>\n      <th>TrackDurationMs</th>\n      <th>Energy</th>\n      <th>BeatsPerMinute</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.603610</td>\n      <td>-7.636942</td>\n      <td>0.023500</td>\n      <td>0.000005</td>\n      <td>0.000001</td>\n      <td>0.051385</td>\n      <td>0.409866</td>\n      <td>290715.6450</td>\n      <td>0.826267</td>\n      <td>147.53020</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.639451</td>\n      <td>-16.267598</td>\n      <td>0.071520</td>\n      <td>0.444929</td>\n      <td>0.349414</td>\n      <td>0.170522</td>\n      <td>0.651010</td>\n      <td>164519.5174</td>\n      <td>0.145400</td>\n      <td>136.15963</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.514538</td>\n      <td>-15.953575</td>\n      <td>0.110715</td>\n      <td>0.173699</td>\n      <td>0.453814</td>\n      <td>0.029576</td>\n      <td>0.423865</td>\n      <td>174495.5667</td>\n      <td>0.624667</td>\n      <td>55.31989</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.734463</td>\n      <td>-1.357000</td>\n      <td>0.052965</td>\n      <td>0.001651</td>\n      <td>0.159717</td>\n      <td>0.086366</td>\n      <td>0.278745</td>\n      <td>225567.4651</td>\n      <td>0.487467</td>\n      <td>147.91212</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.532968</td>\n      <td>-13.056437</td>\n      <td>0.023500</td>\n      <td>0.068687</td>\n      <td>0.000001</td>\n      <td>0.331345</td>\n      <td>0.477769</td>\n      <td>213960.6789</td>\n      <td>0.947333</td>\n      <td>89.58511</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"test.head(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-21T18:49:00.129604Z","iopub.execute_input":"2025-09-21T18:49:00.129895Z","iopub.status.idle":"2025-09-21T18:49:00.144632Z","shell.execute_reply.started":"2025-09-21T18:49:00.129875Z","shell.execute_reply":"2025-09-21T18:49:00.143601Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"       id  RhythmScore  AudioLoudness  VocalContent  AcousticQuality  \\\n0  524164     0.410013     -16.794967      0.023500         0.232910   \n1  524165     0.463071      -1.357000      0.141818         0.057725   \n2  524166     0.686569      -3.368928      0.167851         0.287823   \n3  524167     0.885793      -5.598049      0.118488         0.000005   \n4  524168     0.637391      -7.068160      0.126099         0.539073   \n\n   InstrumentalScore  LivePerformanceLikelihood  MoodScore  TrackDurationMs  \\\n0           0.012689                   0.271585   0.664321      302901.5498   \n1           0.257942                   0.097624   0.829552      221995.6643   \n2           0.210915                   0.325909   0.304978      357724.0127   \n3           0.376906                   0.134435   0.487740      271790.3989   \n4           0.068950                   0.024300   0.591248      277728.5383   \n\n     Energy  \n0  0.424867  \n1  0.846000  \n2  0.134067  \n3  0.316467  \n4  0.481067  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>RhythmScore</th>\n      <th>AudioLoudness</th>\n      <th>VocalContent</th>\n      <th>AcousticQuality</th>\n      <th>InstrumentalScore</th>\n      <th>LivePerformanceLikelihood</th>\n      <th>MoodScore</th>\n      <th>TrackDurationMs</th>\n      <th>Energy</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>524164</td>\n      <td>0.410013</td>\n      <td>-16.794967</td>\n      <td>0.023500</td>\n      <td>0.232910</td>\n      <td>0.012689</td>\n      <td>0.271585</td>\n      <td>0.664321</td>\n      <td>302901.5498</td>\n      <td>0.424867</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>524165</td>\n      <td>0.463071</td>\n      <td>-1.357000</td>\n      <td>0.141818</td>\n      <td>0.057725</td>\n      <td>0.257942</td>\n      <td>0.097624</td>\n      <td>0.829552</td>\n      <td>221995.6643</td>\n      <td>0.846000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>524166</td>\n      <td>0.686569</td>\n      <td>-3.368928</td>\n      <td>0.167851</td>\n      <td>0.287823</td>\n      <td>0.210915</td>\n      <td>0.325909</td>\n      <td>0.304978</td>\n      <td>357724.0127</td>\n      <td>0.134067</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>524167</td>\n      <td>0.885793</td>\n      <td>-5.598049</td>\n      <td>0.118488</td>\n      <td>0.000005</td>\n      <td>0.376906</td>\n      <td>0.134435</td>\n      <td>0.487740</td>\n      <td>271790.3989</td>\n      <td>0.316467</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>524168</td>\n      <td>0.637391</td>\n      <td>-7.068160</td>\n      <td>0.126099</td>\n      <td>0.539073</td>\n      <td>0.068950</td>\n      <td>0.024300</td>\n      <td>0.591248</td>\n      <td>277728.5383</td>\n      <td>0.481067</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"train.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-21T19:22:36.040193Z","iopub.execute_input":"2025-09-21T19:22:36.040539Z","iopub.status.idle":"2025-09-21T19:22:36.089162Z","shell.execute_reply.started":"2025-09-21T19:22:36.040514Z","shell.execute_reply":"2025-09-21T19:22:36.088172Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 524164 entries, 0 to 524163\nData columns (total 11 columns):\n #   Column                     Non-Null Count   Dtype  \n---  ------                     --------------   -----  \n 0   id                         524164 non-null  int64  \n 1   RhythmScore                524164 non-null  float64\n 2   AudioLoudness              524164 non-null  float64\n 3   VocalContent               524164 non-null  float64\n 4   AcousticQuality            524164 non-null  float64\n 5   InstrumentalScore          524164 non-null  float64\n 6   LivePerformanceLikelihood  524164 non-null  float64\n 7   MoodScore                  524164 non-null  float64\n 8   TrackDurationMs            524164 non-null  float64\n 9   Energy                     524164 non-null  float64\n 10  BeatsPerMinute             524164 non-null  float64\ndtypes: float64(10), int64(1)\nmemory usage: 44.0 MB\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"test.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-21T19:22:41.478736Z","iopub.execute_input":"2025-09-21T19:22:41.479041Z","iopub.status.idle":"2025-09-21T19:22:41.499556Z","shell.execute_reply.started":"2025-09-21T19:22:41.479017Z","shell.execute_reply":"2025-09-21T19:22:41.498209Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 174722 entries, 0 to 174721\nData columns (total 10 columns):\n #   Column                     Non-Null Count   Dtype  \n---  ------                     --------------   -----  \n 0   id                         174722 non-null  int64  \n 1   RhythmScore                174722 non-null  float64\n 2   AudioLoudness              174722 non-null  float64\n 3   VocalContent               174722 non-null  float64\n 4   AcousticQuality            174722 non-null  float64\n 5   InstrumentalScore          174722 non-null  float64\n 6   LivePerformanceLikelihood  174722 non-null  float64\n 7   MoodScore                  174722 non-null  float64\n 8   TrackDurationMs            174722 non-null  float64\n 9   Energy                     174722 non-null  float64\ndtypes: float64(9), int64(1)\nmemory usage: 13.3 MB\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}